{"version":3,"sources":["Languages/Translations.js","Languages/Languages.js","Data/Reducers.js","Data/ActionTypes.js","Data/Store.js","Data/Actions.js","Data/NotificationTypes.js","Components/LanguageChooser.js","Languages/Translate.js","Components/MenuBar.js","Objects/Currency.js","Objects/InputOptions.js","Objects/Tooltip.js","Objects/PropertyEditor.js","Objects/DateFormatter.js","Components/Settle App/Summary.js","Components/Settle App/ReturnsList.js","Components/Settle App/DetailedReturns.js","Components/Settle App/SettleApp.js","Components/Forms/PersonForm.js","Components/Forms/ReturnForm.js","Components/Forms/FormOverlay.js","Components/FileLoader.js","Objects/AnimateMount.js","Components/Notifications/Notification.js","Components/Notifications/NotificationGroup.js","App.js","Objects/Loader.js","index.js"],"names":["languages","id","name","text","translations","pl","title","saveButton","exitButton","monthlyPayment","monthAmount","paymentSum","startedAt","peopleAmount","totalPaymentPerPerson","monthlyPaymentPerPerson","notReturnedAmount","returnDetails","returned","toBeReturned","returnDate","amount","comment","summary","save","addPerson","removePerson","addPersonTitle","personName","addReturn","removeReturn","showReturns","addReturnTitle","paid","onDay","forComment","date","addCommentTitle","addCommentPlaceHolder","fileChooserStartDescription","fileChooserStart","fileChooserDragAreaText","fileChooserDragAreaOverlay","actions","error","errorTooManyFiles","errorWrongJSONFile","errorWrongJSONStructure","success","successFileLoaded","successNewEditor","successAddedPerson","successAddedReturn","closedEditor","tooltipChangeValue","en","initialState","isInitialized","language","activeForm","form","options","undefined","notifications","subscriptionInfo","startDate","people","isLoading","items","returns","peopleReducer","state","action","type","uuid","payload","active","map","item","index","Object","assign","property","value","filter","PURGE","returnsReducer","personId","formReducer","notificationReducer","message","isVisible","notification","initializerReducer","languageReducer","subscriptionInfoReducer","reducer","persistConfig","key","storage","persistedReducer","persistReducer","store","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","setNotification","hideNotification","dispatch","setTimeout","removeNotification","removeReturnsByPerson","toggleForm","loadFileSuccess","data","initialize","LanguageChooser","isOpen","handleClickOutside","e","languageRef","contains","target","setState","handleLanguageChange","preventDefault","props","setLanguage","toggleLanguageList","document","addEventListener","this","removeEventListener","ref","onClick","className","data-language","React","Component","connect","Fragment","MenuBar","saveData","json","JSON","stringify","blob","Blob","url","URL","createObjectURL","a","createElement","body","appendChild","style","href","download","click","window","revokeObjectURL","remove","exit","purge","then","Currency","children","displayType","thousandSeparator","decimalSeparator","decimalScale","fixedDecimalScale","suffix","mask","Date","pattern","blocks","d","IMask","MaskedRange","from","to","maxLength","m","Y","format","day","getDate","month","getMonth","getFullYear","join","parse","str","yearMonthDay","split","lazy","String","Number","unmask","num","scale","signed","thousandsSeparator","radix","mapToRadix","Tooltip","PropertyEditor","onChange","onKeyDown","initialValue","deactivateEditor","catchInvalidDate","handleChangedValue","onBlur","activateEditor","stopPropagation","activating","localeCompare","parseFloat","isNaN","length","onAccept","autoFocus","MonthDifference","d1","d2","includeIncompleteMonth","setStartDate","setSubscriptionAmount","numberOfPeople","person","numberOfMonths","sumPayments","sumReturns","reduce","p","n","desc","color","ReturnsList","handleRemovePerson","returnObj","editReturn","ownProps","DetailedReturns","handleAddReturn","paymentsPerPerson","sumPerPerson","numberOfReturnsPerPerson","dropdown","editPerson","colSpan","SettleApp","PersonForm","handleChange","event","handleSubmit","handleCloseForm","ReturnForm","el","input","find","FormOverlay","forms","FileLoader","handleDragEnter","dragDepth","dataTransfer","inDragArea","handleDragLeave","handleDragOver","handleDrop","loadFileError","handleFile","files","clearData","file","reader","FileReader","onload","parseFileResult","result","readAsText","parsedObject","isParsedObjectInvalid","handleStartApp","startNew","object","keys","hasOwnProperty","dragProps","onDragEnter","onDragLeave","onDragOver","onDrop","accept","htmlFor","AnimateMount","shouldAnimateMount","shouldMount","prevProps","Notification","timer","clearTimeout","App","handleFormToggle","Loader","ReactDOM","render","loading","getElementById"],"mappings":"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","file":"static/js/main.85e17d1f.chunk.js","sourcesContent":["import { pl, en } from './Languages'\n\nexport const languages = [\n    {id: 'pl', name: 'Polish', text: 'PL'},\n    {id: 'en', name: 'English', text: 'EN'}\n];\n\nexport const translations = {\n    pl,\n    en\n};","export const pl = {\n    title: \"Rozliczanie Netflix'a\",\n    saveButton: \"Zapisz Dane\",\n    exitButton: \"Zamknij Edytor\",\n    monthlyPayment: \"Miesięczna Opłata\",\n    monthAmount: \"Ilość Miesięcy\",\n    paymentSum: \"Suma Opłat\",\n    startedAt: \"Data Rozpoczęcia\",\n    peopleAmount: \"Ilość Osób\",\n    totalPaymentPerPerson: \"Łączna Opłata Na Osobę\",\n    monthlyPaymentPerPerson: \"Miesięczna Opłata Na Osobę\",\n    notReturnedAmount: \"Ilość Niezwrócona\",\n    returnDetails: \"Szczegóły zwrotów\",\n    returned: \"Zwrócono\",\n    toBeReturned: \"Do zwrotu\",\n    returnDate: \"Data Zwrotu\",\n    amount: \"Kwota\",\n    comment: \"Komentarz\",\n    summary: \"Podsumowanie\",\n    save: \"Zapisz\",\n\n    addPerson: \"Dodaj Osobę\",\n    removePerson: \"Usuń Osobę\",\n    addPersonTitle: \"Kto ma teraz dostęp do Netflix'a i powinien płacić?\",\n    personName: \"Imię osoby\",\n\n    addReturn: \"Dodaj Zwrot\",\n    removeReturn: \"Usuń Zwrot\",\n    showReturns: \"Pokaż Zwroty\",\n    addReturnTitle: \"Dodaj szczegóły zwrotu:\",\n    paid: \"zapłacił(-a)\",\n    onDay: \"w dniu\",\n    forComment: \"za\",\n    date: \"data\",\n    addCommentTitle: \"Dodaj komentarz do tego zwrotu poniżej.\",\n    addCommentPlaceHolder: \"Dodaj komentarz\",\n\n    fileChooserStartDescription: \"Jeżeli nie posiadasz pliku, to zacznij rozliczanie na nowo.\",\n    fileChooserStart: \"Rozpocznij\",\n    fileChooserDragAreaText: \"Przeciągnij plik tutaj albo kliknij, aby wybrać plik z listy.\",\n    fileChooserDragAreaOverlay: \"Upuść plik tutaj.\",\n    actions: \"Akcje\",\n\n    error: \"Błąd\",\n    errorTooManyFiles: \"Za dużo plików zostało wrzuconych.\",\n    errorWrongJSONFile: \"Załadowany plik nie jest poprawnym plikiem JSON.\",\n    errorWrongJSONStructure: \"Załadowany plik JSON ma złą strukturę.\",\n    \n    success: \"Sukces\",\n    successFileLoaded: \"Plik został poprawnie załadowany.\",\n    successNewEditor: \"Rozpoczęto nowy edytor.\",\n    successAddedPerson: \"Dodano nową osobę.\",\n    successAddedReturn: \"Dodano nowy zwrot za Netflix'a.\",\n\n    closedEditor: \"Zamknięto edytor. Wszystkie dane zostały usunięte.\",\n\n    tooltipChangeValue: \"Kliknij, by zmienić wartość.\"\n};\n\nexport const en = {\n    title: \"Netflix Settling\",\n    saveButton: \"Save Data\",\n    exitButton: \"Close Editor\",\n    monthlyPayment: \"Monthly Payment\",\n    monthAmount: \"Months Amount\",\n    paymentSum: \"Overall Payment\",\n    startedAt: \"Date Started\",\n    peopleAmount: \"Number Of People\",\n    totalPaymentPerPerson: \"Total Payment Per Person\",\n    monthlyPaymentPerPerson: \"Monthly Payment Per Person\",\n    notReturnedAmount: \"Not Returned Amount\",\n    returnDetails: \"Returns Details\",\n    returned: \"Returned\",\n    toBeReturned: \"To Be Returned\",\n    returnDate: \"Return Date\",\n    amount: \"Amount\",\n    comment: \"Comment\",\n    summary: \"Summary\",\n    save: \"Save\",\n\n    addPerson: \"Add Person\",\n    removePerson: \"Remove Person\",\n    addPersonTitle: \"Who got access to Netflix and should be paying now?\",\n    personName: \"Name\",\n\n    addReturn: \"Add Return\",\n    removeReturn: \"Remove Return\",\n    showReturns: \"Show Returns\",\n    addReturnTitle: \"Add return detail:\",\n    paid: \"paid\",\n    onDay: \"on day\",\n    forComment: \"for\",\n    date: \"date\",\n    addCommentTitle: \"Add a comment to this return below.\",\n    addCommentPlaceHolder: \"Add comment\",\n\n    fileChooserStartDescription: \"If you don't have a file, then start settling debt from scratch.\",\n    fileChooserStart: \"Start\",\n    fileChooserDragAreaText: \"Drag your file here or click to choose file from the list.\",\n    fileChooserDragAreaOverlay: \"Drop your file here.\",\n    actions: \"Actions\",\n\n    error: \"Error\",\n    errorTooManyFiles: \"Too many files have been dragged!\",\n    errorWrongJSONFile: \"Loaded file is not a correct JSON file.\",\n    errorWrongJSONStructure: \"Loaded JSON file has an incorrect structure.\",\n\n    success: \"Success\",\n    successFileLoaded: \"File was loaded successfully.\",\n    successNewEditor: \"Started a new editor.\",\n    successAddedPerson: \"Added a new person.\",\n    successAddedReturn: \"Added a new return for Netflix.\",\n\n    closedEditor: \"Closed editor. All data was erased.\",\n\n    tooltipChangeValue: \"Click to change value.\"\n};","import { v4 as uuid } from 'uuid'\nimport { PURGE } from 'redux-persist'\nimport { languages } from '../Languages/Translations'\n\nimport {\n    SET_NOTIFICATION, HIDE_NOTIFICATION, REMOVE_NOTIFICATION,\n    ADD_PERSON, EDIT_PERSON, ADD_PEOPLE,\n    ADD_RETURN, EDIT_RETURN, ADD_RETURNS,\n    TOGGLE_FORM,\n    REMOVE_PERSON,\n    REMOVE_RETURN, REMOVE_RETURNS_BY_PERSON,\n    INITIALIZE, EXIT_APP,\n    SET_LANGUAGE,\n    SET_START_DATE, SET_SUBSCRIPTION_AMOUNT, SET_SUBSCRIPTION_INFO\n} from './ActionTypes'\n\n//DIRECT EDITING - WHY DOESN'T IT WORK?\n//let index = state.findIndex(item => item.index === action.index);\n//state[index][action.property] = action.value;\n\nconst initialState = {\n    isInitialized: false,\n    language: languages[1],\n    activeForm: {\n        form: '',\n        options: undefined\n    },\n    notifications: [],\n    subscriptionInfo: {\n        startDate: \"2018-12-13\",\n        amount: 52\n    },\n    people: {\n        isLoading: false,\n        items: []\n    },\n    returns: {\n        isLoading: false,\n        items: []\n    }\n}\n\nfunction peopleReducer(state = initialState.people, action) {\n    switch(action.type) {\n        case ADD_PERSON:\n            return {\n                isLoading: false,\n                items: [\n                    ...state.items,\n                    {\n                        id: uuid(),\n                        name: action.payload.name,\n                        active: true\n                    }\n                ]\n            };\n        case EDIT_PERSON:\n            return  {\n                isLoading: false,\n                items: state.items.map(\n                    item => item.id === action.payload.index\n                        ? Object.assign({}, item, {[action.payload.property]: action.payload.value})\n                        : item\n                )\n            }\n        case REMOVE_PERSON:\n            return {\n                isLoading: false,\n                items: state.items.filter(item => item.id !== action.payload.index)\n            }\n        case ADD_PEOPLE:\n            const { people } = action.payload;\n            return {\n                isLoading: false,\n                items: people\n            };\n        case PURGE:\n            return initialState.people;\n        default:\n            return state;\n    }\n}\n\nfunction returnsReducer(state = initialState.returns, action) {\n    switch(action.type) {\n        case ADD_RETURN:\n            return {\n                isLoading: false,\n                items: [\n                    ...state.items,\n                    {\n                        id: uuid(),\n                        personId: action.payload.personId,\n                        date: action.payload.date,\n                        amount: action.payload.amount,\n                        comment: action.payload.comment\n                    }\n                ]\n            };\n        case EDIT_RETURN:\n            return  {\n                isLoading: false,\n                items: state.items.map(\n                    item => item.id === action.payload.index\n                        ? Object.assign({}, item, {[action.payload.property]: action.payload.value})\n                        : item\n                )\n            }\n        case REMOVE_RETURN:\n            return {\n                isLoading: false,\n                items: state.items.filter(item => item.id !== action.payload.index)\n            }\n        case REMOVE_RETURNS_BY_PERSON:\n            return {\n                isLoading: false,\n                items: state.items.filter(item => item.personId !== action.payload.index)\n            }\n        case ADD_RETURNS:\n            return {\n                isLoading: false,\n                items: action.payload.returns\n            };\n        case PURGE:\n            return initialState.returns;\n        default:\n            return state;\n    }\n}\n\nfunction formReducer(state = initialState.activeForm, action) {\n    switch(action.type) {\n        case TOGGLE_FORM:\n            return action.payload;\n        case PURGE:\n            return initialState.activeForm;\n        default:\n            return state;\n    }\n}\n\nfunction notificationReducer(state = initialState.notifications, action) {\n    switch(action.type) {\n        case SET_NOTIFICATION:\n            return [\n                ...state,\n                {\n                    id: uuid(),\n                    type: action.payload.type,\n                    message: action.payload.message,\n                    isVisible: true\n                }\n            ];\n        case HIDE_NOTIFICATION:\n            return state.map(notification => notification.id === action.payload.id ? Object.assign({}, notification, {isVisible: false}) : notification);\n        case REMOVE_NOTIFICATION:\n            return state.filter(notification => notification.id !== action.payload.id);\n        case PURGE:\n            return initialState.notifications;\n        default:\n            return state;\n    }\n}\n\nfunction initializerReducer(state = initialState.isInitialized, action) {\n    switch(action.type) {\n        case INITIALIZE:\n            return action.payload.isInitialized;\n        case PURGE:\n            return initialState.isInitialized;\n        default:\n            return state;\n    }\n}\n\nfunction languageReducer(state = initialState.language, action) {\n    switch(action.type) {\n        case SET_LANGUAGE:\n            return action.payload.language;\n        default:\n            return state;\n    }\n}\n\nfunction subscriptionInfoReducer(state = initialState.subscriptionInfo, action) {\n    switch(action.type) {\n        case SET_SUBSCRIPTION_INFO:\n            return action.payload.subscriptionInfo;\n        case SET_START_DATE:\n            return Object.assign({}, state, { startDate: action.payload.startDate });\n        case SET_SUBSCRIPTION_AMOUNT:\n            return Object.assign({}, state, { amount: action.payload.amount });\n        default:\n            return state;\n    }\n}\n\nfunction reducer(state = initialState, action) {\n    if(action.type === EXIT_APP)\n        state = Object.assign({}, initialState, {language: state.language });\n\n    return {\n        isInitialized: initializerReducer(state.isInitialized, action),\n        language: languageReducer(state.language, action),\n        activeForm: formReducer(state.activeForm, action),\n        notifications: notificationReducer(state.notifications, action),\n        subscriptionInfo: subscriptionInfoReducer(state.subscriptionInfo, action),\n        people: peopleReducer(state.people, action),\n        returns: returnsReducer(state.returns, action)\n    }\n}\n\nexport default reducer;","export const SET_NOTIFICATION = 'SET_NOTIFICATION'\nexport const HIDE_NOTIFICATION = 'HIDE_NOTIFICATION'\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\n\nexport const ADD_PERSON = 'ADD_PERSON'\nexport const EDIT_PERSON = 'EDIT_PERSON'\nexport const REMOVE_PERSON = 'REMOVE_PERSON'\nexport const ADD_PEOPLE = 'ADD_PEOPLE'\n\nexport const ADD_RETURN = 'ADD_RETURN'\nexport const EDIT_RETURN = 'EDIT_RETURN'\nexport const REMOVE_RETURN = 'REMOVE_RETURN'\nexport const REMOVE_RETURNS_BY_PERSON = 'REMOVE_RETURNS_BY_PERSON'\nexport const ADD_RETURNS = 'ADD_RETURNS'\n\nexport const TOGGLE_FORM = 'TOGGLE_FORM'\n\nexport const LOAD_FILE_REQUEST = 'LOAD_FILE_REQUEST'\nexport const LOAD_FILE_RESPONSE_SUCCESS = 'LOAD_FILE_RESPONSE_SUCCESS'\nexport const LOAD_FILE_RESPONSE_ERROR = 'LOAD_FILE_RESPONSE_ERROR'\nexport const INITIALIZE = 'INITIALIZE'\nexport const EXIT_APP = 'EXIT_APP'\n\nexport const SET_LANGUAGE = 'SET_LANGUAGE'\n\nexport const SET_START_DATE = 'SET_START_DATE'\nexport const SET_SUBSCRIPTION_AMOUNT = 'SET_SUBSCRIPTION_AMOUNT'\nexport const SET_SUBSCRIPTION_INFO = 'SET_SUBSCRIPTION_INFO'","import { createStore, applyMiddleware } from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport reducer from './Reducers'\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n  }\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = createStore(persistedReducer,\n    applyMiddleware(\n        thunkMiddleware\n    )\n);\n\nexport const persistor = persistStore(store);","import {\n    SET_NOTIFICATION, HIDE_NOTIFICATION, REMOVE_NOTIFICATION,\n    ADD_PERSON, EDIT_PERSON, REMOVE_PERSON, ADD_PEOPLE,\n    ADD_RETURN, EDIT_RETURN, REMOVE_RETURN, REMOVE_RETURNS_BY_PERSON, ADD_RETURNS,\n    TOGGLE_FORM,\n    LOAD_FILE_REQUEST,\n    INITIALIZE, EXIT_APP,\n    SET_LANGUAGE,\n    SET_START_DATE, SET_SUBSCRIPTION_AMOUNT, SET_SUBSCRIPTION_INFO\n} from './ActionTypes'\n\nimport {\n    NOTIFICATION_TYPE_ERROR,\n    NOTIFICATION_TYPE_SUCCESS\n} from './NotificationTypes'\n\nimport { persistor } from './Store'\n\n/*\n * Error Actions\n */\n\nexport function setNotification(type, message) {\n    return {\n        type: SET_NOTIFICATION,\n        payload: {\n            type,\n            message\n        }\n    }\n}\n\nexport function hideNotification(id) {\n    return dispatch => {\n        dispatch({\n            type: HIDE_NOTIFICATION,\n            payload: {\n                id\n            }\n        });\n        setTimeout(() => dispatch(removeNotification(id)), 300);\n    }\n}\n\nexport function removeNotification(id) {\n    return {\n        type: REMOVE_NOTIFICATION,\n        payload: {\n            id\n        }\n    }\n}\n\n/*\n * People Actions\n */\n\nexport function addPerson(name) {\n    return dispatch => {\n        dispatch({\n            type: ADD_PERSON,\n            payload: {\n                name\n            }\n        });\n        dispatch(setNotification(NOTIFICATION_TYPE_SUCCESS, \"successAddedPerson\"));\n    }\n}\n\nexport function editPerson(index, property, value) {\n    return {\n        type: EDIT_PERSON,\n        payload: {\n            index,\n            property,\n            value\n        }\n    }\n}\n\nexport function removePerson(index) {\n    return dispatch => {\n        dispatch({\n            type: REMOVE_PERSON,\n            payload: {\n                index\n            }\n        });\n\n        dispatch(removeReturnsByPerson(index));\n    }\n}\n\nexport function addPeople(people) {\n    return {\n        type: ADD_PEOPLE,\n        payload: {\n            people\n        }\n    }\n}\n\n/*\n * Return Actions\n */\n\nexport function addReturn(personId, date, amount, comment) {\n    return dispatch => {\n        dispatch({\n            type: ADD_RETURN,\n            payload: {\n                personId,\n                date,\n                amount,\n                comment\n            }\n        })\n        dispatch(setNotification(NOTIFICATION_TYPE_SUCCESS, \"successAddedReturn\"));\n    }\n}\n\nexport function editReturn(index, property, value) {\n    return {\n        type: EDIT_RETURN,\n        payload: {\n            index,\n            property,\n            value\n        }\n    }\n}\n\nexport function removeReturn(index) {\n    return {\n        type: REMOVE_RETURN,\n        payload: {\n            index\n        }\n    }\n}\n\nexport function removeReturnsByPerson(index) {\n    return {\n        type: REMOVE_RETURNS_BY_PERSON,\n        payload: {\n            index\n        }\n    }\n}\n\nexport function addReturns(returns) {\n    return {\n        type: ADD_RETURNS,\n        payload: {\n            returns\n        }\n    }\n}\n\n/*\n * Form Actions\n */\n\nexport function toggleForm(form, options) {\n    return {\n        type: TOGGLE_FORM,\n        payload: {\n            form,\n            options\n        }\n    }\n}\n\n/*\n * Load File Actions\n */\n\nexport function loadFileRequest() {\n    return {\n        type: LOAD_FILE_REQUEST,\n        payload: {\n            people: {\n                isLoading: true\n            },\n            returns: {\n                isLoading: true\n            }\n        }\n    }\n}\n\nexport function loadFileSuccess(data, message) {\n    return dispatch => {\n        dispatch(addPeople(data.people));\n        dispatch(addReturns(data.returns));\n        dispatch(setSubscriptionInfo(data.subscriptionInfo));\n        dispatch(setNotification(NOTIFICATION_TYPE_SUCCESS, message));\n        dispatch(initialize());\n    }\n}\n\nexport function loadFileError(message) {\n    return dispatch => dispatch(setNotification(NOTIFICATION_TYPE_ERROR, message));\n}\n\nexport function initialize() {\n    return {\n        type: INITIALIZE,\n        payload: {\n            isInitialized: true\n        }\n    }\n}\n\nexport function startNew(message) {\n    return dispatch => {\n        dispatch(setNotification(NOTIFICATION_TYPE_SUCCESS, message));\n        dispatch(initialize());\n    }\n}\n\nexport function exit() {\n    return dispatch => {\n        persistor.purge().then(() => {\n            dispatch({ type: EXIT_APP })\n            dispatch(setNotification(\"notification\", \"closedEditor\"))\n        });\n    }\n}\n\n/*\n * Language Actions\n */\n\nexport function setLanguage(language) { \n    return {\n        type: SET_LANGUAGE,\n        payload: {\n            language\n        }\n    }\n}\n\n/*\n * Subscription Actions\n */ \n\nexport function setSubscriptionInfo(subscriptionInfo) {\n    return {\n        type: SET_SUBSCRIPTION_INFO,\n        payload: {\n            subscriptionInfo\n        }\n    }\n}\n\nexport function setStartDate(startDate) {\n    return {\n        type: SET_START_DATE,\n        payload: {\n            startDate\n        }\n    }\n}\n\nexport function setSubscriptionAmount(amount) {\n    return {\n        type: SET_SUBSCRIPTION_AMOUNT,\n        payload: {\n            amount\n        }\n    }\n}","export const NOTIFICATION_TYPE_NOTIFICATION = \"notification\";\nexport const NOTIFICATION_TYPE_ERROR = \"error\";\nexport const NOTIFICATION_TYPE_SUCCESS = \"success\";\nexport const NOTIFICATION_TYPE_WARNING = \"warning\";","import React from 'react'\nimport { languages } from '../Languages/Translations'\nimport { connect } from 'react-redux';\nimport { setLanguage } from '../Data/Actions';\n\nclass LanguageChooser extends React.Component {\n    state = {\n        isOpen: false\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside, false);\n    }\n\n    handleClickOutside = e => {\n        if(!this.languageRef.contains(e.target))\n            this.setState({isOpen: false});\n    }\n\n    handleLanguageChange = (e, language) => {\n        e.preventDefault();\n        this.props.setLanguage(language);\n        this.toggleLanguageList();\n    }\n\n    toggleLanguageList = () => {\n        this.setState({isOpen: !this.state.isOpen});\n    }\n\n    render() {\n        return (\n            <div id=\"language-chooser\" ref={ref => this.languageRef = ref}>\n                <div id=\"language-chooser-current\" onClick={this.toggleLanguageList}>\n                    {this.props.language.text}\n                </div>\n                <div id=\"language-chooser-list\" className={this.state.isOpen ? \"opened\" : \"\"}>\n                    {languages.filter(language => language.id !== this.props.language.id)\n                        .map(language => (\n                        <div className=\"language-chooser-option\" data-language={language.id} key={language.id} onClick={(e) => this.handleLanguageChange(e, language)}>\n                            {language.name}\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.language\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLanguage: language => dispatch(setLanguage(language))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageChooser);","import React from 'react'\nimport { translations } from './Translations'\nimport { connect } from 'react-redux';\n\nfunction Translate(props) {\n  return (\n    <React.Fragment>\n      {translations[props.language.id][props.text]}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    language: state.language\n  }\n}\n\nexport default connect(mapStateToProps)(Translate);","import React from 'react'\nimport LanguageChooser from './LanguageChooser'\nimport Translate from '../Languages/Translate'\nimport { connect } from 'react-redux';\nimport { exit } from '../Data/Actions'\n\nclass MenuBar extends React.Component {\n    saveData = e => {\n        e.preventDefault();\n\n        var json = JSON.stringify({\n            subscriptionInfo: this.props.subscriptionInfo,\n            people: this.props.people.items,\n            returns: this.props.returns.items\n        });\n\n        var blob = new Blob([json], {type: \"application/json\"});\n        var url  = URL.createObjectURL(blob);\n\n        var a = document.createElement(\"a\");\n        document.body.appendChild(a);\n        a.style = \"display: none\";\n        a.href = url;\n        a.download = \"netflix-setttling-data.json\";\n        a.click();\n        window.URL.revokeObjectURL(url);\n        a.remove();\n    }\n\n    render() {\n        return (\n            <div id=\"menubar\">\n                <div className=\"wrapper\">\n                    <div id=\"title\"><a href=\"/\"><Translate text=\"title\" /></a></div>\n                    <div className=\"right\">\n                        {this.props.isInitialized ? <button className=\"menubar-button\" onClick={this.saveData}><Translate text=\"saveButton\" /></button>: null}\n                        {this.props.isInitialized ? <button className=\"menubar-button\" onClick={this.props.exit}><Translate text=\"exitButton\" /></button>: null}\n                        <LanguageChooser />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        subscriptionInfo: state.subscriptionInfo,\n        people: state.people,\n        returns: state.returns\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        exit: () => dispatch(exit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MenuBar);","import React from 'react'\nimport NumberFormat from 'react-number-format'\n\nexport default class Currency extends React.Component {\n    render() {\n        return <NumberFormat\n                value={this.props.children}\n                displayType='text'\n                thousandSeparator=' '\n                decimalSeparator=','\n                decimalScale={2}\n                fixedDecimalScale={false}\n                suffix=' zł'\n            />\n    }\n}","import IMask from 'imask/esm';\n\nexport const options = {\n    \"date\": {\n        mask: Date,\n        pattern: 'Y-`m-`d',\n        blocks: {\n          d: {\n            mask: IMask.MaskedRange,\n            from: 1,\n            to: 31,\n            maxLength: 2,\n          },\n          m: {\n            mask: IMask.MaskedRange,\n            from: 1,\n            to: 12,\n            maxLength: 2,\n          },\n          Y: {\n            mask: IMask.MaskedRange,\n            from: 1900,\n            to: 9999,\n          }\n        },\n        format: function (date) {\n          var day = date.getDate();\n          var month = date.getMonth() + 1;\n          var year = date.getFullYear();\n      \n          if (day < 10) day = \"0\" + day;\n          if (month < 10) month = \"0\" + month;\n      \n          return [year, month, day].join('-');\n        },\n        parse: function (str) {\n          var yearMonthDay = str.split('-');\n          return new Date(yearMonthDay[0], yearMonthDay[1] - 1, yearMonthDay[2]);\n        },\n        lazy: false\n    },\n    \"text\": {\n        mask: String,\n        maxLength: 25\n    },\n    \"number\": {\n        mask: Number,\n        pattern: ''\n    },\n    \"currency\": {\n        mask: 'num zł',\n        unmask: true,\n        lazy: false,\n        blocks: {\n            num: {\n                mask: Number,\n                scale: 2,\n                signed: true,\n                thousandsSeparator: ' ',\n                radix: ',',\n                mapToRadix: ['.']\n            }\n        }\n    }\n}","import React, { Component } from 'react'\nimport Translate from '../Languages/Translate'\n\nexport class Tooltip extends Component {\n    render() {\n        return (\n            <div className=\"tooltip\">\n                <Translate text={this.props.text} />\n            </div>\n        )\n    }\n}\n\nexport default Tooltip","import React from 'react'\nimport { IMaskInput } from 'react-imask'\nimport { options } from './InputOptions'\nimport { Tooltip } from './Tooltip'\n\nclass PropertyEditor extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let value;\n        if(props.children instanceof Object) value = props.children.props.children;\n        else value = props.children;\n\n        this.state = {\n            initialValue: value,\n            value: value,\n            activating: false,\n            active: false\n        }\n\n        this.options = options[props.type];\n    }\n\n    onChange = (value) => {\n        this.setState({ value: value });\n    }\n\n    onKeyDown = e => {\n        if (e.key === \"Escape\") {\n            this.setState({ value: this.state.initialValue });\n            this.deactivateEditor();\n        } else if (e.key === \"Enter\") {\n            if(this.catchInvalidDate()) {\n                this.setState({ value: this.state.initialValue });\n                this.deactivateEditor();\n                return;\n            }\n            this.handleChangedValue();\n            this.deactivateEditor();\n        }\n\n    }\n\n    onBlur = () => {\n        if(this.catchInvalidDate()) {\n            this.setState({ value: this.state.initialValue });\n            this.deactivateEditor();\n            return;\n        }\n        this.handleChangedValue();\n        this.deactivateEditor();\n    }\n\n    activateEditor = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({activating: true, active: true});\n    }\n\n    deactivateEditor = () => {\n        this.setState({active: false});\n        setTimeout(() => this.setState({activating: false}), 1);\n    }\n\n    handleChangedValue = () => {\n        if(this.state.value === '') {\n            this.setState({ value: this.state.initialValue });\n        } else {\n            let value;\n\n            if(this.props.type.localeCompare(\"number\") === 0 || this.props.type.localeCompare(\"currency\") === 0)\n                value = parseFloat(this.state.value);\n            else\n                value = this.state.value;\n\n            if(this.props.id === undefined && this.props.property === undefined)\n                this.props.onChange(value);\n            else\n                this.props.onChange(this.props.id, this.props.property, value);\n            this.setState({ initialValue: value + \"\", value: value + \"\"  });\n        }\n    }\n\n    catchInvalidDate = () => {\n        if(this.props.type.localeCompare(\"date\") !== 0)\n            return false;\n\n        return !(new Date(this.state.value) instanceof Date && !isNaN(new Date(this.state.value)) && this.state.value.length === 10);\n    }\n\n    render() {\n        return (\n            <div className=\"property-editor\" onClick={this.activateEditor} onBlur={this.onBlur} onKeyDown={this.onKeyDown}>\n                {this.state.active\n                    ? <IMaskInput\n                        name={this.props.property}\n                        value={this.state.value + \"\"}\n                        onAccept={(value) => this.onChange(value)}\n                        {...this.options}\n                        autoFocus\n                        className=\"input\"\n                        />\n                    : <div className={this.state.activating ? \"content activated\" : \"content\"}>{this.props.children}</div>}\n                <Tooltip text=\"tooltipChangeValue\" />\n            </div>\n        );\n    }\n}\n\nexport default PropertyEditor;","export const DateString = (date) => {\n    return date.getFullYear()\n    + \"-\" + (date.getMonth() > 10 ? date.getMonth() + 1 : \"0\" + (date.getMonth() + 1))\n    + \"-\" + date.getDate();\n}\n\nexport const MonthDifference = (d1, d2, includeIncompleteMonth) => {\n    return ((d2.getFullYear() - d1.getFullYear()) * 12)\n      + (d2.getMonth() - d1.getMonth())\n      + (d2.getDate() >= d1.getDate() && includeIncompleteMonth ? 1 : 0);\n}","import React from 'react';\nimport { connect } from \"react-redux\"\nimport Currency from '../../Objects/Currency'\nimport Translate from '../../Languages/Translate'\nimport { setStartDate, setSubscriptionAmount } from '../../Data/Actions'\nimport PropertyEditor from '../../Objects/PropertyEditor'\n\nimport { MonthDifference } from '../../Objects/DateFormatter'\n\nconst Summary = (props) => {\n    const numberOfPeople = props.people.items.filter(person => person.active === true).length + 1;\n    const numberOfMonths = MonthDifference(new Date(props.subscriptionInfo.startDate), new Date(), true);\n    const sumPayments = numberOfMonths * props.subscriptionInfo.amount;\n    const sumReturns = props.returns.items.reduce((p,n) => p + n.amount, 0);\n\n    const items = [\n        {value: <PropertyEditor type=\"currency\" onChange={props.setSubscriptionAmount}><Currency>{props.subscriptionInfo.amount}</Currency></PropertyEditor>, desc: \"monthlyPayment\"},\n        {value: <PropertyEditor type=\"date\" onChange={props.setStartDate}>{props.subscriptionInfo.startDate}</PropertyEditor>, desc: \"startedAt\"},\n        {value: numberOfMonths, desc: \"monthAmount\"},\n        {value: <Currency>{sumPayments}</Currency>, desc: \"paymentSum\"},\n        {value: (numberOfPeople - 1), desc: \"peopleAmount\"},\n        {value: <Currency>{sumPayments / numberOfPeople}</Currency>, desc: \"totalPaymentPerPerson\"},\n        {value: <Currency>{props.subscriptionInfo.amount / numberOfPeople}</Currency>, desc: \"monthlyPaymentPerPerson\"},\n        {value: (sumPayments - sumReturns - (sumPayments / numberOfPeople)) > 0 ? <span style={{color:\"#aa0808\"}}><Currency>{sumPayments - sumReturns - (sumPayments / numberOfPeople)}</Currency></span> : <Currency>{0}</Currency>, desc: \"notReturnedAmount\"}\n    ];\n\n    return (\n        <div id=\"summary\">\n            <div id=\"summary-title\"><Translate text=\"summary\" /></div>\n            <div id=\"stats\">\n                {items.map(item => (\n                    <div className=\"item\" key={item.desc}>\n                        <div className=\"value\">{item.value}</div>\n                        <div className=\"desc\"><Translate text={item.desc} /></div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        subscriptionInfo: state.subscriptionInfo,\n        people: state.people,\n        returns: state.returns\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setStartDate: startDate => dispatch(setStartDate(startDate)),\n        setSubscriptionAmount: amount => dispatch(setSubscriptionAmount(amount))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Summary);","import React from 'react';\nimport Currency from '../../Objects/Currency'\nimport Translate from '../../Languages/Translate'\nimport { connect } from 'react-redux';\nimport PropertyEditor from '../../Objects/PropertyEditor'\nimport { editReturn, removeReturn } from '../../Data/Actions';\n\nclass ReturnsList extends React.Component {\n  handleRemovePerson = (e, id) => {\n    e.preventDefault();\n    this.props.removeReturn(id);\n  }\n\n  render() {\n    return (\n      <table className=\"returns-list\">\n        <thead>\n          <tr>\n            <th><Translate text=\"returnDate\" /></th>\n            <th><Translate text=\"amount\" /></th>\n            <th className=\"comment\"><Translate text=\"comment\" /></th>\n            <th><Translate text=\"actions\" /></th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.props.returns.items.map(returnObj => (\n            <tr key={returnObj.id}>\n                <td><PropertyEditor id={returnObj.id} type={'date'} property={'date'} onChange={this.props.editReturn}>{returnObj.date}</PropertyEditor></td>\n                <td><PropertyEditor id={returnObj.id} type={'currency'} property={'amount'} onChange={this.props.editReturn}><Currency>{returnObj.amount}</Currency></PropertyEditor></td>\n                <td className=\"comment\"><PropertyEditor id={returnObj.id} type={'text'} property={'comment'} onChange={this.props.editReturn}>{returnObj.comment}</PropertyEditor></td>\n                <td className=\"actions\">\n                  <button className=\"action-button secondary\" name=\"removeReturn\" type=\"button\" onClick={e => this.handleRemovePerson(e, returnObj.id)}>\n                    <Translate text=\"removeReturn\" />\n                  </button>\n                </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    returns: {\n      isLoading: state.returns.isLoading,\n      items: state.returns.items.filter(returnObj => returnObj.personId === ownProps.personId)\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n      editReturn: (index, property, value) => dispatch(editReturn(index, property, value)),\n      removeReturn: index => dispatch(removeReturn(index))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReturnsList);","import React from 'react'\nimport Currency from '../../Objects/Currency'\nimport ReturnsList from './ReturnsList'\nimport Translate from '../../Languages/Translate'\nimport { connect } from 'react-redux';\nimport { MonthDifference } from '../../Objects/DateFormatter'\nimport PropertyEditor from '../../Objects/PropertyEditor'\nimport { toggleForm, editPerson, removePerson } from '../../Data/Actions';\n\nclass DetailedReturns extends React.Component {\n    state = {\n        active: null\n    }\n\n    dropdown(id) {\n        this.setState({\n            active: this.state.active === id ? null : id\n        })\n    }\n\n    handleAddReturn = (e, id) => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.props.toggleForm(e.target.name, {personId: id});\n    }\n\n    handleRemovePerson = (e, id) => {\n        e.stopPropagation();\n        e.preventDefault();\n        this.props.removePerson(id);\n    }\n\n    render() {\n        var numberOfPeople = this.props.people.items.filter(person => person.active === true).length + 1;\n        var numberOfMonths = MonthDifference(new Date(this.props.subscriptionInfo.startDate), new Date(), true);\n        var sumPayments = numberOfMonths * this.props.subscriptionInfo.amount;\n        var paymentsPerPerson = sumPayments / numberOfPeople;\n    \n        return (\n            <div id=\"detailed-returns\">\n                <div id=\"detailed-returns-header\">\n                    <div id=\"detailed-returns-title\">\n                        <Translate text=\"returnDetails\" />\n                    </div>\n                    <button className=\"add-person-button\" name=\"addPerson\" type=\"button\" onClick={e => this.props.toggleForm(e.target.name)}>\n                        <Translate text=\"addPerson\" />\n                    </button>\n                </div>\n                <table id=\"detailed-returns-list\">\n                    <thead id=\"detailed-returns-list-header\">\n                        <tr>\n                            <th><Translate text=\"personName\" /></th>\n                            <th><Translate text=\"returned\" /></th>\n                            <th><Translate text=\"toBeReturned\" /></th>\n                            <th><Translate text=\"actions\" /></th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.props.people.items.map((person) => {\n                            var sumPerPerson = this.props.returns.items.reduce((p,n) => (person.id === n.personId ? p + n.amount : p), 0);\n                            var numberOfReturnsPerPerson = this.props.returns.items.filter(returnObj => returnObj.personId === person.id).length;\n\n                            return [\n                                <tr key={person.id} onClick={() => this.dropdown(person.id)} className={\"detailed-returns-list-row \" + (numberOfReturnsPerPerson > 0 ? \"has-returns\" : null)}>\n                                    <td><PropertyEditor id={person.id} type='text' property='name' onChange={this.props.editPerson}>{person.name}</PropertyEditor></td>\n                                    <td><Currency>{sumPerPerson}</Currency></td>\n                                    <td><Currency>{paymentsPerPerson - sumPerPerson}</Currency></td>\n                                    <td className=\"actions\">\n                                        <button className=\"action-button\" name=\"addReturn\" type=\"button\" onClick={e => this.handleAddReturn(e, person.id)}>\n                                            <Translate text=\"addReturn\" />\n                                        </button>\n                                        <button className=\"action-button secondary\" name=\"removePerson\" type=\"button\" onClick={e => this.handleRemovePerson(e, person.id)}>\n                                            <Translate text=\"removePerson\" />\n                                        </button>\n                                    </td>\n                                </tr>,\n                                <React.Fragment key={person.id + \"-additional-info\"}>\n                                    {\n                                        numberOfReturnsPerPerson > 0\n                                        &&\n                                        <tr>\n                                            <td colSpan=\"4\" className=\"additional-info-container\">\n                                                <div className={person.id === this.state.active ? \"additional-info active\" : \"additional-info\"}>\n                                                    <ReturnsList personId={person.id} />\n                                                </div>\n                                            </td>\n                                        </tr>\n                                    }  \n                                </React.Fragment>\n                                \n                            ];\n                        })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        subscriptionInfo: state.subscriptionInfo,\n        people: state.people,\n        returns: state.returns\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        toggleForm: (form, options) => dispatch(toggleForm(form, options)),\n        editPerson: (index, property, value) => dispatch(editPerson(index, property, value)),\n        removePerson: index => dispatch(removePerson(index))\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailedReturns);","import React from 'react';\n\nimport Summary from './Summary'\nimport DetailedReturns from './DetailedReturns'\n\nclass SettleApp extends React.Component {\n  render() {\n    return (\n        <div id=\"content\">\n          <div className=\"wrapper\">\n            <Summary />\n            <DetailedReturns />\n          </div>\n        </div>\n      );\n  }\n}\n\nexport default SettleApp;\n","import React from 'react'\nimport Translate from '../../Languages/Translate'\nimport { addPerson } from '../../Data/Actions'\nimport { connect } from 'react-redux';\n\nclass PersonForm extends React.Component {\n    state = {\n        value: ''\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            value: event.target.value\n        });\n    }\n\n    handleSubmit = (event) => {\n        this.props.handleCloseForm();\n        this.props.addPerson(this.state.value);\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <div className=\"content person-form\">\n                <div className=\"form-title\"><Translate text=\"addPersonTitle\" /></div>\n                <input className=\"form-input\" type=\"text\" name=\"personName\" value={this.state.value} maxLength={25} onChange={this.handleChange} />\n                {this.state.value ? <button className=\"submit-button\" type=\"button\" onClick={this.handleSubmit}><Translate text=\"save\" /></button> : null}\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addPerson: name => dispatch(addPerson(name))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(PersonForm);","import React from 'react'\nimport Translate from '../../Languages/Translate'\nimport { addReturn } from '../../Data/Actions'\nimport { connect } from 'react-redux'\nimport {IMaskInput} from 'react-imask'\nimport { options } from '../../Objects/InputOptions'\n\nclass ReturnForm extends React.Component {\n    state = {\n        personId: '',\n        date: '',\n        amount: '',\n        comment: ''\n    }\n    \n    handleSubmit = (event) => {\n        this.props.handleCloseForm();\n        this.props.addReturn(\n            this.props.activeForm.options.personId,\n            this.state.date,\n            parseFloat(this.state.amount),\n            this.state.comment\n        );\n        event.preventDefault();\n    }\n\n    handleChange = (value, mask) => {\n        this.setState({\n            [mask.el.input.name]: value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"content return-form\">\n                <div className=\"form-title\"><Translate text=\"addReturnTitle\" /></div>\n                <div className=\"form-section\">\n                    <b>{this.props.people.find(person => person.id === this.props.activeForm.options.personId).name + \" \"}</b> <Translate text=\"paid\" /> {\"   \"}\n                    <IMaskInput className=\"form-input\" name=\"amount\" {...options['currency']} value={this.state.amount} onAccept={(value, mask) => this.handleChange(value, mask)} />\n                    {\"   \"} <Translate text=\"onDay\" /> {\"   \"}\n                    <IMaskInput className=\"form-input\" name=\"date\" {...options['date']} value={this.state.date} onAccept={(value, mask) => this.handleChange(value, mask)} />\n                    {\"   \"} <Translate text=\"forComment\" /> {\"   \"}\n                    <IMaskInput className=\"form-input comment\" name=\"comment\" {...options['text']} value={this.state.comment} onAccept={(value, mask) => this.handleChange(value, mask)} />\n                    .\n                </div>\n                {this.state.amount && this.state.date && this.state.comment ? <button className=\"submit-button\" type=\"button\" onClick={this.handleSubmit}><Translate text=\"save\" /></button> : null}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        activeForm: state.activeForm,\n        startDate: state.subscriptionInfo.startDate,\n        people: state.people.items\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addReturn: (personId, date, amount, comment) => dispatch(addReturn(personId, date, amount, comment))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReturnForm);","import React from 'react'\nimport PersonForm from './PersonForm'\nimport ReturnForm from './ReturnForm'\nimport { connect } from 'react-redux';\nimport { toggleForm } from '../../Data/Actions';\n\n\n/*\n\n1. Tło rozmyc\n2. Dodac duzy tytul: \"Dodaj nowa osobe\", \"Dodaj nowy zwrot\"\n3. Tresc taka sama\n4. Doprowadz do lewej\n5. Ddoaj przycisk \"Dodaj\" tak, by nie przestawial zawartosci\n\n*/\n\n\nclass FormOverlay extends React.Component {\n    handleCloseForm = () => {\n        this.props.toggleForm('', null);\n    }\n\n    render() {\n        var forms = {\n          addPerson: <PersonForm handleCloseForm={this.handleCloseForm} />,\n          addReturn: <ReturnForm handleCloseForm={this.handleCloseForm} />\n        }\n\n        return (\n            <div id=\"form-overlay\" className={this.props.activeForm.form ? \"active\" : \"\"}>\n                <div id=\"form\">\n                    {this.props.activeForm.form && forms[this.props.activeForm.form]}\n                    <div className=\"close\" onClick={this.handleCloseForm} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        activeForm: state.activeForm\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleForm: (form, options) => dispatch(toggleForm(form, options))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormOverlay);","import React from 'react'\nimport { loadFileSuccess, loadFileError, startNew } from '../Data/Actions'\nimport { connect } from 'react-redux';\nimport Translate from '../Languages/Translate'\n\nclass FileLoader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inDragArea: false\n        }\n    \n        this.dragDepth = 0;\n    \n        this.dragProps = {\n            onDragEnter: this.handleDragEnter,\n            onDragLeave: this.handleDragLeave,\n            onDragOver: this.handleDragOver,\n            onDrop: this.handleDrop\n        }\n    }\n\n    handleDragEnter = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragDepth++;\n        \n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            this.setState({inDragArea: true});\n        }\n    }\n\n    handleDragLeave = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.dragDepth--;\n        if(this.dragDepth > 0) return;\n        \n        this.setState({inDragArea: false});\n    }\n\n    handleDragOver = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        \n    }\n\n    handleDrop = e => {\n        e.preventDefault();\n        e.stopPropagation();\n        this.setState({inDragArea: false});\n        \n        if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n            if(e.dataTransfer.items.length > 1)\n                this.props.loadFileError(\"errorTooManyFiles\");\n            else\n                this.handleFile(e.dataTransfer.files[0]);\n\n            e.dataTransfer.clearData();\n            this.dragDepth = 0;\n        }\n    }\n\n    handleFile = file => {\n        var reader = new FileReader();\n        reader.onload = e => {\n            this.parseFileResult(e.target.result);\n        }\n        reader.readAsText(file);\n    }\n\n    parseFileResult = data => {\n        var parsedObject;\n        try {\n            parsedObject = JSON.parse(data);\n        } catch (e) {\n            this.props.loadFileError(\"errorWrongJSONFile\");\n            return;\n        }\n\n        if(this.isParsedObjectInvalid(parsedObject)) {\n            this.props.loadFileError(\"errorWrongJSONStructure\");\n            return;\n        }\n\n\n        this.props.loadFileSuccess(parsedObject, \"successFileLoaded\");\n    }\n\n    handleStartApp = e => {\n        e.preventDefault()\n        this.props.startNew(\"successNewEditor\");\n    }\n\n    isParsedObjectInvalid = object => {\n        if(Object.keys(object).length > 3)\n            return true;\n\n        if(!object.hasOwnProperty(\"people\") || !object.hasOwnProperty(\"returns\") || !object.hasOwnProperty(\"subscriptionInfo\"))\n            return true;\n\n        return false;\n    }\n\n    render() {\n        return (\n            <div id=\"file-loader\">\n                <div className=\"wrapper\">\n                    <div id=\"drop-area\" {...this.dragProps} className={this.state.inDragArea ? \"active\" : \"\"}>\n                        <input id=\"file-chooser-input\" type=\"file\" accept=\".json\" onChange={e => this.handleFile(e.target.files[0])} />\n                        <label className=\"drag-area-button\" htmlFor=\"file-chooser-input\">\n                            <Translate text=\"fileChooserDragAreaText\" />\n                        </label>\n                        <div id=\"drag-area-overlay\" className={this.state.inDragArea ? \"active\" : \"\"}>\n                            <div className=\"drag-area-overlay-text\">\n                                <Translate text=\"fileChooserDragAreaOverlay\" />\n                            </div>\n                        </div>\n                    </div>\n                    <div id=\"file-loader-start-new\">\n                        <div className=\"file-loader-text\">\n                            <Translate text=\"fileChooserStartDescription\" />\n                        </div>\n                        <div className=\"file-loader-text\">\n                            <button onClick={this.handleStartApp}>\n                                <Translate text=\"fileChooserStart\" />\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadFileSuccess: (data, message) => dispatch(loadFileSuccess(data, message)),\n        loadFileError: message => dispatch(loadFileError(message)),\n        startNew: message => dispatch(startNew(message))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(FileLoader);","import React from 'react'\n\nclass AnimateMount extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            shouldAnimateMount: this.props.shouldMount\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if(!this.props.shouldMount && prevProps.shouldMount) {\n            setTimeout(() => this.setState({shouldAnimateMount: false}), 299);\n        } else if(this.props.shouldMount && !prevProps.shouldMount) {\n            this.setState({shouldAnimateMount: true});\n        }\n    }\n\n    render() {\n        return (\n            this.state.shouldAnimateMount ?\n            <div className={this.props.shouldMount ? \"mount-animation\" : \"unmount-animation\"}>\n                {this.props.children}\n            </div>\n            : null\n        )\n    }\n}\n\nexport default AnimateMount;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { hideNotification } from '../../Data/Actions'\nimport Translate from '../../Languages/Translate'\n\nclass Notification extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.timer = null;\n    }\n    \n    componentDidMount() {\n        this.timer = setTimeout(() => this.props.hideNotification(this.props.notification.id), 5000);\n    }\n\n    componentDidUpdate() {\n        if(this.timer !== null)\n            clearTimeout(this.timer);\n\n        this.timer = setTimeout(() => this.props.hideNotification(this.props.notification.id), 5000);\n    }\n\n    componentWillUnmount() {\n        clearTimeout(this.timer);\n    }\n\n    //<Translate text=\"error\" />: \n    render() {\n        return (\n            <div className={\"notification \" + (this.props.notification.type !== null ? this.props.notification.type : \"\")}>\n                <Translate text={this.props.notification.message} />\n                <div className=\"close\" onClick={() => this.props.hideNotification(this.props.notification.id)} />\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        hideNotification: id => dispatch(hideNotification(id))\n    };\n}\n\nexport default connect(null, mapDispatchToProps)(Notification);","import React from 'react'\nimport { connect } from 'react-redux';\n\nimport AnimateMount from '../../Objects/AnimateMount'\nimport Notification from './Notification'\n\nconst NotificationGroup = props => {\n    return (\n        props.notifications.length > 0 ? \n        <div id=\"notification-group\">\n            {\n                props.notifications.map(notification => (\n                    <AnimateMount shouldMount={notification.isVisible} key={notification.id}>\n                        <Notification notification={notification} />\n                    </AnimateMount>\n                ))\n            }\n        </div>\n        : null\n    );\n}\n\nconst mapStateToProps = state => {\n  return {\n    notifications: state.notifications\n  }\n}\n\nexport default connect(mapStateToProps)(NotificationGroup);","import React from 'react';\n\nimport MenuBar from './Components/MenuBar'\nimport SettleApp from './Components/Settle App/SettleApp'\nimport FormOverlay from './Components/Forms/FormOverlay'\nimport FileLoader from './Components/FileLoader'\nimport NotificationGroup from './Components/Notifications/NotificationGroup';\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n  handleFormToggle = (form) => {\n    setTimeout(() => this.setState({activeForm: form}), 300);\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <MenuBar isInitialized={this.props.isInitialized} />\n\n        {!this.props.isInitialized && <FileLoader />}\n        {this.props.isInitialized && <SettleApp />}\n        {this.props.isInitialized && <FormOverlay handleFormToggle={this.handleFormToggle}/>}\n\n        <NotificationGroup />\n      </React.Fragment>\n      );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isInitialized: state.isInitialized\n  }\n}\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react'\n\nclass Loader extends React.Component {\n    render() {\n        return <div className=\"loading\"></div>\n    }\n}\n\nexport default Loader;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './global.scss';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { store, persistor } from './Data/Store'\nimport Loader from './Objects/Loader';\n \nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loader />} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('app')\n);"],"sourceRoot":""}